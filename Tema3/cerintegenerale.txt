Cerința generala

    minim o funcție șablon și o clasă șablon (template)
        modificați o clasă existentă care este ceva mai izolată de celelalte (să nu aveți foarte mult de modificat) și transformați-o în clasă template
        adăugați (minim) un atribut de tip T sau care depinde de T
        adăugați (minim) o funcție membru care să depindă de T (sau de alt parametru template);
        adăugați (minim) o funcție normală/liberă template; poate să fie friend
    minim 2 design patterns (3 dacă aveți singleton sau ceva la fel de simplu și proiectul e simplu); utilizarea acestor design patterns ar trebui să aibă sens

Cerinta specifica

Tema 6. Se dorește implementarea unei aplicații OOP care sa permita gestionarea activității unor farmacii apartinand proprietarului X.
Pentru fiecare farmacie se cunoaște cel puțin denumirea, numărul de angajați și profiturile pe fiecare luna. Farmaciile pot fi și online. 
În acest caz se cunoaște doar adresa web, numărul de vizitatori și discountul utilizat.

Cerința suplimentară: 
- Să se adauge toate câmpurile relevante pentru modelarea acestei probleme.
- Să se construiască clasa template GestionareFarmacii care sa conțină informații despre diversele tipuri de farmacii. Clasa conține indexul farmaciei (incrementat automat la adaugarea unei noi file), id-ul lanțului (constant) și o structura de obiecte, alocată dinamic. Sa se supraincarce operatorul += pentru inserarea unei noi farmacii online în structura.
- Să se construiască o specializare pentru tipul Farmacie_online care sa conțină și să afișeze doar numărul total de vizitatori ai farmaciilor online. 

Structura de date: vector sau list <tuple<web, nr_vizitatori, discount>> se rețin farmaciile online.
